CREATE DATABASE COMPANY;

SHOW DATABASES;

USE COMPANY;

CREATE TABLE WORKER(
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME CHAR(25),
    LAST_NAME CHAR(25),
    SALARY INT(8),
    JOIN_DATE DATETIME,
    DEPARTMENT CHAR(25)
);

INSERT INTO WORKER (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOIN_DATE, DEPARTMENT) VALUES
(001, "YASH", "AMBEKAR", 10000000, "2022-09-20 09.00.00", "ADMIN"),
(002, "KRISHNA", "KOTGIRE", 1000000, "2022-10-20 11.00.00", "ACCOUNT"),
(003, "AVDESH", "VORA", 100000, "2022-11-20 08.00.00", "ACCENTURE");

INSERT INTO WORKER (WORKER_ID,FIRST_NAME,LAST_NAME,SALARY,JOIN_DATE,DEPARTMENT) VALUES
	(004, "OMKAR", "JADHAV", 105000, "2022-11-20 08.00.00", "ACCENTURE"),
	(005, "TEJAS", "BHANDVALKAR", 2100000, "2022-11-20 08.00.00", "ACCENTURE"),
    (006, "YAHS", "SHINDE", 80000, "2022-11-20 08.00.00", "ACCENTURE");
    
SELECT * FROM WORKER;
SELECT FIRST_NAME,SALARY FROM WORKER;
SELECT FIRST_NAME, DEPARTMENT FROM WORKER;

SELECT * FROM WORKER WHERE SALARY > 100000;
SELECT * FROM WORKER WHERE DEPARTMENT = "ADMIN";

SELECT * FROM WORKER WHERE SALARY BETWEEN 1000001 AND 10000001;

-- REDUCE OR STATEMENTS
SELECT * FROM WORKER WHERE DEPARTMENT="ACCOUNT" OR DEPARTMENT="ACCENTURE";

-- IN CLAUSE TO REDUCE OR STATEMENTS
SELECT * FROM WORKER WHERE DEPARTMENT IN ("ADMIN","ACCOUNT");

-- NOT CLAUSE TO DISPLAY ENTRIES NOT IN THAT DEPARTMENT
SELECT * FROM WORKER WHERE DEPARTMENT NOT IN ("ADMIN","ACCOUNT");

-- INSERTING A RECORD IN TABLE WITH A NULL FEILD
INSERT INTO WORKER (WORKER_ID,FIRST_NAME,LAST_NAME,SALARY,JOIN_DATE,DEPARTMENT) VALUES
	("007","SATYAM","SAKHORE",1347652,NULL,"ACCOUNT");

-- FINDING OUT THE QUERY WITH JOIN DATE AS NULL
SELECT* FROM WORKER WHERE JOIN_DATE IS NULL;

-- WILDCARDS  USED FOR FILTERING DATA
SELECT * FROM WORKER WHERE FIRST_NAME LIKE "%S_";

-- SORTIING DATA IN ASCENDING ORDER
SELECT * FROM WORKER ORDER BY SALARY ASC;
-- SSORTING IN DESCENDING ORDER
SELECT * FROM WORKER ORDER BY SALARY DESC;

SELECT * FROM WORKER ORDER BY DEPARTMENT;

-- SELECT DISTINCT VALUES IN THE TABLE
SELECT DISTINCT DEPARTMENT FROM WORKER;

-- GROUPING OF DATA IN TABLE
-- (TO FIND NUMBER OF PEOPLE IN EACH DEPARTMENT)
-- USING GROUP BY WWITHOUT ANY AGGREGATION FUNCTION IS USED SAME AS DISTINCT
SELECT DEPARTMENT FROM WORKER GROUP BY DEPARTMENT;

-- GROUP BY USING AGGREGATION FUNCTION
SELECT DEPARTMENT ,COUNT(DEPARTMENT) FROM WORKER GROUP BY DEPARTMENT;
SELECT SALARY ,COUNT(SALARY) FROM WORKER GROUP BY SALARY;

-- finding average salary per department
select department ,avg(salary) from worker group by department;

-- min salary per department
select department, min(salary) from worker group by department;

-- max salary per department
SELECT DEPARTMENT, MAX(SALARY) FROM WORKER GROUP BY DEPARTMENT;

-- TOTAL SALARY PER DEPARTMENT
SELECT DEPARTMENT ,SUM(SALARY) FROM WORKER GROUP BY DEPARTMENT;

-- GROUP BY HAVING
SELECT DEPARTMENT, COUNT(DEPARTMENT) FROM WORKER GROUP BY (DEPARTMENT) HAVING COUNT(DEPARTMENT) >= 2;

CREATE TABLE BONUS (
	WORKER_REF_ID INT,
    BONUS_AMOUNT INT(10),
    BONUS_DATE datetime,
    FOREIGN KEY (WORKER_REF_ID)
		REFERENCES WORKER(WORKER_ID)
		ON DELETE CASCADE
);

INSERT INTO BONUS (WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
	(001, 5000, "16-02-20"),
    (001, 4000, "17-03-21"),
    (002, 4500, "16-02-20");

SELECT * FROM BONUS;

CREATE TABLE TITLE(
	WORKER_REF_ID INT,
    WORKER_TITLE CHAR(25),
    AFFECTED_FROM DATETIME,
    FOREIGN KEY (WORKER_REF_ID)
		REFERENCES WORKER(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO TITLE (WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
	(001, "MANAGER", "2016-02-20 00.00.00"),
    (002, "ACCOUNTANT", "2018-02-20 00.00.00"),
    (003, "EXECUTIVE", "2019-02-20 00.00.00");
    
SELECT * FROM TITLE; 

DROP DATABASE IF EXISTS COMPANY
